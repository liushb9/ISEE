defaults:
  - _self_
  - task: default_task_10

name: six_tasks
_target_: diffusion_policy.workspace.robotworkspace.RobotWorkspace

task_name: six_tasks
shape_meta: &shape_meta
  # acceptable types: rgb, low_dim
  obs:
    head_cam:
      shape: [3, 256, 256]  # 直接定义图像形状
      type: rgb
    # front_cam:
    #   shape: [3, 256, 256]
    #   type: rgb
    # left_cam:
    #   shape: [3, 256, 256]
    #   type: rgb
    # right_cam:
    #   shape: [3, 256, 256]
    #   type: rgb
    agent_pos:
      shape: [10]  # 10维endpose: 位置(3) + 旋转(6) + 夹爪(1)
  action:
    shape: [10]    # 10维endpose: 位置(3) + 旋转(6) + 夹爪(1)
exp_name: "six_tasks"

horizon: 8
n_obs_steps: 3
n_action_steps: 6
n_latency_steps: 0
dataset_obs_steps: ${n_obs_steps}
past_action_visible: False
keypoint_visible_rate: 1.0
obs_as_global_cond: True

policy:
  _target_: diffusion_policy.policy.diffusion_unet_image_policy.DiffusionUnetImagePolicy

  shape_meta: ${shape_meta}
  
  noise_scheduler:
    _target_: diffusers.schedulers.scheduling_ddpm.DDPMScheduler
    num_train_timesteps: 100
    beta_start: 0.0001
    beta_end: 0.02
    beta_schedule: squaredcos_cap_v2
    variance_type: fixed_small
    clip_sample: True
    prediction_type: epsilon

  obs_encoder:
    _target_: diffusion_policy.model.vision.multi_image_obs_encoder.MultiImageObsEncoder
    shape_meta: ${shape_meta}
    rgb_model:
      _target_: diffusion_policy.model.vision.model_getter.get_resnet
      name: resnet18
      weights: null
    resize_shape: [256, 256]
    crop_shape: null
    random_crop: True
    use_group_norm: True
    share_rgb_model: False
    imagenet_norm: True

  horizon: ${horizon}
  n_action_steps: ${eval:'${n_action_steps}+${n_latency_steps}'}
  n_obs_steps: ${n_obs_steps}
  num_inference_steps: 100
  obs_as_global_cond: ${obs_as_global_cond}
  diffusion_step_embed_dim: 128
  down_dims: [256, 512, 1024]
  kernel_size: 5
  n_groups: 8
  cond_predict_scale: True

# EMA配置
ema:
  _target_: diffusion_policy.model.diffusion.ema_model.EMAModel
  update_after_step: 0
  inv_gamma: 1.0
  power: 0.75
  min_value: 0.0
  max_value: 0.9999

dataloader:
  batch_size: 128
  num_workers: 0
  shuffle: True
  pin_memory: True
  persistent_workers: False

val_dataloader:
  batch_size: 128
  num_workers: 0
  shuffle: False
  pin_memory: True
  persistent_workers: False

# 优化器配置
optimizer:
  _target_: torch.optim.AdamW
  lr: 1.0e-4
  betas: [0.95, 0.999]
  eps: 1.0e-8
  weight_decay: 1.0e-6

training:
  device: "cuda:0"
  seed: 42
  num_epochs: 600
  max_train_steps: null
  max_val_steps: null
  gradient_accumulate_every: 1
  lr: 1.0e-4
  lr_scheduler: cosine
  lr_warmup_steps: 500
  use_ema: True
  debug: False
  resume: True
  freeze_encoder: False
  checkpoint_every: 300
  val_every: 1
  sample_every: 5
  rollout_every: 50
  tqdm_interval_sec: 1.0

checkpoint:
  topk:
    monitor_key: test_mean_score
    mode: max
    k: 5
    format_str: 'epoch={epoch:04d}-test_mean_score={test_mean_score:.3f}.ckpt'
  save_last_ckpt: True
  save_last_snapshot: False

logging:
  project: diffusion_policy_debug
  resume: True
  mode: "online"
  name: ${now:%Y.%m.%d-%H.%M.%S}_${name}_${task_name}
  tags: ["${name}", "${task_name}", "${exp_name}"]
  id: null
  group: null

# 多运行配置
multi_run:
  run_dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  wandb_name_base: ${now:%Y.%m.%d-%H.%M.%S}_${name}_${task_name}

# Hydra配置
hydra:
  job:
    override_dirname: ${name}
  run:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  sweep:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
    subdir: ${hydra.job.num}

# 添加额外的配置键
setting: "demo_clean"
expert_data_num: 1200
head_camera_type: "D435"
